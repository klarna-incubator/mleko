name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !(contains(github.event.head_commit.message, 'chore(release):') || contains(github.event.head_commit.message, 'chore(deps):'))
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Upgrade pip
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip --version

      - name: Install Poetry
        run: |
          pip install --constraint=.github/workflows/constraints.txt poetry
          poetry --version

      - name: Install development dependencies
        run: |
          poetry install --only dev

      - name: Check if there is a parent commit
        id: check-parent-commit
        run: |
          echo "::set-output name=sha::$(git rev-parse --verify --quiet HEAD^)"

      - name: Python Semantic Release
        id: semantic-release
        if: steps.check-parent-commit.outputs.sha
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          set -o pipefail
          # Get the current version
          current_version=$(poetry version | awk '{print $2}')
          # Set git details
          git config --global user.name "Klarna Bot"
          git config --global user.email "developers@klarna.com"
          # Run semantic-release
          poetry run semantic-release publish -v DEBUG -D commit_author="github-actions <github-actions@github.com>"
          # Get the new version
          new_version=$(poetry version | awk '{print $2}')
          # Check if the versions are different
          if [ "$current_version" != "$new_version" ]; then
            # If they're different, set an output variable to true
            echo "::set-output name=is_updated::true"
            echo "::set-output name=version::$new_version"
          fi

      - name: Build package
        run: |
          poetry build --ansi

      - name: Publish package on PyPI
        if: steps.semantic-release.outputs.is_updated
        uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
