:py:mod:`mleko.cache.fingerprinters.vaex_fingerprinter`
=======================================================

.. py:module:: mleko.cache.fingerprinters.vaex_fingerprinter

.. autoapi-nested-parse::

   The module containing the VaexFingerprinter class.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   mleko.cache.fingerprinters.vaex_fingerprinter.VaexFingerprinter




.. py:class:: VaexFingerprinter

   Bases: :py:obj:`mleko.cache.fingerprinters.base_fingerprinter.BaseFingerprinter`

   A fingerprinter for Vaex DataFrames.

   .. py:method:: fingerprint(data: vaex.DataFrame) -> str

      Generate a fingerprint for a Vaex DataFrame.

      .. note::

         The fingerprint is generated by calling the `fingerprint()` method of the `vaex` DataFrame. This
         method will attempt to generate a unique fingerprint for the given DataFrame, it may however
         not be completely stable across different runs of the program (see the `fingerprint()` method
         of the `vaex` DataFrame for more information).

      :param data: The Vaex DataFrame to be fingerprinted.

      :returns: The fingerprint as a hexadecimal string.

      .. rubric:: Examples

      >>> fingerprinter = VaexFingerprinter()
      >>> fingerprinter.fingerprint(vaex.from_arrays(x=[1, 2, 3], y=[4, 5, 6]))
      "fingerprint"



