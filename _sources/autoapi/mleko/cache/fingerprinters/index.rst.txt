:py:mod:`mleko.cache.fingerprinters`
====================================

.. py:module:: mleko.cache.fingerprinters

.. autoapi-nested-parse::

   This package provides Fingerprinter classes for generating unique fingerprints.

   Fingerprinters are used for generating unique fingerprints of various data and file types,
   such as Vaex DataFrames or CSV files. These fingerprints can be used to track changes in data and support
   caching mechanisms.

   The following fingerprinting utilities are provided:
       - `BaseFingerprinter`: The base class for all fingerprinters.
       - `CSVFingerprinter`: A fingerprinter for CSV files.
       - `VaexFingerprinter`: A fingerprinter for Vaex DataFrames.
       - `JsonFingerprinter`: A fingerprinter for JSON data.
       - `CallableSourceFingerprinter`: A fingerprinter for Python Callables that hashes the source code of the Callable
           to generate a fingerprint.
       - `OptunaSamplerFingerprinter`: A fingerprinter for Optuna samplers.
       - `OptunaPrunerFingerprinter`: A fingerprinter for Optuna pruners.



Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   base_fingerprinter/index.rst
   callable_source_fingerprinter/index.rst
   csv_fingerprinter/index.rst
   json_fingerprinter/index.rst
   optuna_pruner_fingerprinter/index.rst
   optuna_sampler_fingerprinter/index.rst
   vaex_fingerprinter/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   mleko.cache.fingerprinters.BaseFingerprinter
   mleko.cache.fingerprinters.CallableSourceFingerprinter
   mleko.cache.fingerprinters.CSVFingerprinter
   mleko.cache.fingerprinters.JsonFingerprinter
   mleko.cache.fingerprinters.OptunaPrunerFingerprinter
   mleko.cache.fingerprinters.OptunaSamplerFingerprinter
   mleko.cache.fingerprinters.VaexFingerprinter











